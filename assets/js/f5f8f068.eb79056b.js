"use strict";(self.webpackChunkwiki=self.webpackChunkwiki||[]).push([["9891"],{571:function(e,n,i){i.r(n),i.d(n,{default:()=>h,frontMatter:()=>o,metadata:()=>r,assets:()=>c,toc:()=>d,contentTitle:()=>l});var r=JSON.parse('{"id":"development/maintainership/device_sc_guidelines","title":"Device Source Code Guidelines","description":"You can refer to the definitions of the keywords used here.","source":"@site/docs/development/maintainership/device_sc_guidelines.md","sourceDirName":"development/maintainership","slug":"/development/maintainership/device-guidelines","permalink":"/development/maintainership/device-guidelines","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"slug":"/development/maintainership/device-guidelines","sidebar_position":2},"sidebar":"defaultSidebar","previous":{"title":"Requirements","permalink":"/development/maintainership/requirements"},"next":{"title":"Technical Guidelines","permalink":"/development/maintainership/tech_guidelines"}}'),s=i("5893"),t=i("65");let o={slug:"/development/maintainership/device-guidelines",sidebar_position:2},l="Device Source Code Guidelines",c={},d=[{value:"Device Tree and Vendor Tree",id:"device-tree-and-vendor-tree",level:2},{value:"Kernel Source",id:"kernel-source",level:2}];function a(e){let n={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",strong:"strong",ul:"ul",...(0,t.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"device-source-code-guidelines",children:"Device Source Code Guidelines"})}),"\n",(0,s.jsxs)(n.p,{children:["You can refer to the definitions of the keywords used ",(0,s.jsx)(n.a,{href:"https://datatracker.ietf.org/doc/html/rfc2119",children:"here"}),"."]}),"\n",(0,s.jsx)(n.h2,{id:"device-tree-and-vendor-tree",children:"Device Tree and Vendor Tree"}),"\n",(0,s.jsx)(n.p,{children:"Device trees for Halcyon:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"MUST"})," have proper commit authorship."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"MUST"})," have clear and descriptive commit titles."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"MUST"})," follow proper formatting for commit titles and descriptions."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"MUST"})," include a working proprietary files list."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"MUST NOT"})," ship any prebuilt APKs that do not come from Halcyon, including Google Camera and GrapheneOS Camera."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"MUST NOT"})," contain any unused overlays."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"MUST NOT"})," include any features that do not exist in the stock ROM."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"MUST NOT"})," remove packages that are included in the ROM by default."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"MUST NOT"})," include overlays unrelated to the device (e.g., QS tile order)."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"MUST"})," have enforcing SELinux."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"MAY"})," include OEM camera ports."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"SHOULD"})," follow ",(0,s.jsx)(n.strong,{children:"AOSP directory and naming structure"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"SHOULD NOT"})," use ",(0,s.jsx)(n.strong,{children:"dirty hacks"})," or hardcoded paths (e.g., ",(0,s.jsx)(n.code,{children:"system/etc/hosts"})," redirection)."]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"kernel-source",children:"Kernel Source"}),"\n",(0,s.jsx)(n.p,{children:"Kernel sources for Halcyon:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"MUST"})," have a complete commit history and proper authorship."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"MUST NOT"})," include any type of blocker (e.g., Boeffla Wakelock Blocker, FS blocker)."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"MUST NOT"})," include any type of modification (e.g., KernelSU, Apatch)."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"MUST NOT"})," include any form of overclocking (e.g., CPU/GPU overclocking, screen overclocking)."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"MUST"})," be able to be built with AOSP Clang."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"SHOULD"})," maintain ",(0,s.jsx)(n.strong,{children:"consistency with device trees"}),", including ",(0,s.jsx)(n.code,{children:"defconfig"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"MUST"})," be able to boot ",(0,s.jsx)(n.strong,{children:"without modifications to init or recovery"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"MUST"})," not break ",(0,s.jsx)(n.strong,{children:"DTBO or recovery boot"}),"."]}),"\n"]})]})}function h(e={}){let{wrapper:n}={...(0,t.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(a,{...e})}):a(e)}},65:function(e,n,i){i.d(n,{Z:function(){return l},a:function(){return o}});var r=i(7294);let s={},t=r.createContext(s);function o(e){let n=r.useContext(t);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),r.createElement(t.Provider,{value:n},e.children)}}}]);