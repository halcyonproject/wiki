"use strict";(self.webpackChunkwiki=self.webpackChunkwiki||[]).push([["4734"],{2798:function(e,i,n){n.r(i),n.d(i,{default:()=>h,frontMatter:()=>o,metadata:()=>s,assets:()=>a,toc:()=>d,contentTitle:()=>l});var s=JSON.parse('{"id":"development/maintainership/technical_guidlines","title":"Technical Guidelines","description":"This page provides detailed technical guidelines for all maintainers to follow when building and maintaining Halcyon. These guidelines ensure consistency and high-quality builds across all supported devices.","source":"@site/docs/development/maintainership/technical_guidlines.md","sourceDirName":"development/maintainership","slug":"/development/maintainership/tech_guidelines","permalink":"/development/maintainership/tech_guidelines","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"slug":"/development/maintainership/tech_guidelines","sidebar_position":3,"title":"Technical Guidelines"},"sidebar":"defaultSidebar","previous":{"title":"Device Source Code Guidelines","permalink":"/development/maintainership/device-guidelines"},"next":{"title":"Code of Conduct","permalink":"/development/maintainership/coc"}}'),r=n("5893"),t=n("65");let o={slug:"/development/maintainership/tech_guidelines",sidebar_position:3,title:"Technical Guidelines"},l="Technical Guidelines for Halcyon Maintainers",a={},d=[{value:"Build Environment",id:"build-environment",level:2},{value:"Device Configuration",id:"device-configuration",level:2},{value:"Ported Features from Stock ROM",id:"ported-features-from-stock-rom",level:2},{value:"OEM Camera Apps",id:"oem-camera-apps",level:3},{value:"Audio Mods (Dolby, Dirac, etc.)",id:"audio-mods-dolby-dirac-etc",level:3},{value:"Additional Restrictions",id:"additional-restrictions",level:3},{value:"Best Practices for Building",id:"best-practices-for-building",level:2},{value:"Build and Release Process",id:"build-and-release-process",level:2}];function c(e){let i={a:"a",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",strong:"strong",ul:"ul",...(0,t.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(i.header,{children:(0,r.jsx)(i.h1,{id:"technical-guidelines-for-halcyon-maintainers",children:"Technical Guidelines for Halcyon Maintainers"})}),"\n",(0,r.jsx)(i.p,{children:"This page provides detailed technical guidelines for all maintainers to follow when building and maintaining Halcyon. These guidelines ensure consistency and high-quality builds across all supported devices."}),"\n",(0,r.jsxs)(i.p,{children:['The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this document are to be interpreted as described in ',(0,r.jsx)(i.a,{href:"https://tools.ietf.org/html/rfc2119",children:"RFC 2119"}),"."]}),"\n",(0,r.jsx)(i.h2,{id:"build-environment",children:"Build Environment"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"MUST"})," use the official Halcyon build environment configuration."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"MUST NOT"})," use custom compilers or toolchains unless explicitly approved by the core team. Only the default Clang provided in the Halcyon source is allowed for building."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"MUST"})," ensure that the build environment is properly set up, using the correct versions of required dependencies and tools."]}),"\n"]}),"\n",(0,r.jsx)(i.h2,{id:"device-configuration",children:"Device Configuration"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"MUST"})," maintain the device tree, vendor files, and kernel configuration according to upstream standards."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"MUST"})," have synchronized vendor tree with defined proproetary files in the device tree."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"MUST"})," ensure changes to the device configuration are properly tested before submitting builds."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"MUST"})," keep all files up to date with the latest changes from the core Halcyon source."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"MUST NOT"})," add unsupported or unapproved features that deviate from Halcyon\u2019s philosophy."]}),"\n"]}),"\n",(0,r.jsx)(i.h2,{id:"ported-features-from-stock-rom",children:"Ported Features from Stock ROM"}),"\n",(0,r.jsx)(i.p,{children:"Halcyon allows the inclusion of certain ported features from the stock ROM of a device, with some restrictions to ensure consistency, avoid duplication, and maintain the clean, stock-like experience of the ROM."}),"\n",(0,r.jsx)(i.h3,{id:"oem-camera-apps",children:"OEM Camera Apps"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"MUST"})," be ported exclusively from the stock ROM of the device being maintained. Porting features from other devices that do not natively support them (e.g., Leica MIUI Camera on a device without Leica lenses) is NOT allowed."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"MUST"})," function correctly on the device and be thoroughly tested for stability."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"MUST NOT"})," introduce duplicate apps that already exist in Halcyon. For example, if the OEM Camera requires a gallery app (e.g., OnePlus Camera requiring OnePlus Gallery) and this creates a duplicate of an existing app in Halcyon (such as Google Photos), the inclusion of the OEM Camera and its dependencies ",(0,r.jsx)(i.strong,{children:"SHOULD"})," be restricted or rejected."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"SHOULD"})," integrate smoothly with the system without conflicting with core Halcyon features or existing apps."]}),"\n"]}),"\n",(0,r.jsx)(i.h3,{id:"audio-mods-dolby-dirac-etc",children:"Audio Mods (Dolby, Dirac, etc.)"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"MUST"})," be ported from the stock ROM of the device being maintained."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"MUST"})," be thoroughly tested to ensure they work well with the device\u2019s audio hardware."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"MUST NOT"})," interfere with or degrade the performance of other system audio features."]}),"\n"]}),"\n",(0,r.jsx)(i.h3,{id:"additional-restrictions",children:"Additional Restrictions"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"MUST NOT"})," include any other third-party mods that are not from the stock ROM or are not approved by the core team."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"MUST"})," avoid adding features that deviate from Halcyon\u2019s clean, stock-like user experience, unless approved by the core team."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"MUST"})," prioritize the stability and performance of the system when deciding to add or remove any ported feature."]}),"\n"]}),"\n",(0,r.jsx)(i.h2,{id:"best-practices-for-building",children:"Best Practices for Building"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"MUST"})," ensure that all builds are reproducible by following standard Halcyon build instructions."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"MUST"})," verify the stability and functionality of the build on the device before submitting it for release."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"MUST"})," document any changes, including new features, bug fixes, or optimizations, in commit messages or change logs."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"MUST"})," follow any specific instructions from the core team regarding upcoming changes or major updates."]}),"\n"]}),"\n",(0,r.jsx)(i.h2,{id:"build-and-release-process",children:"Build and Release Process"}),"\n",(0,r.jsx)(i.p,{children:"All official builds for supported devices are compiled by the Halcyon build server. Maintainers are no longer responsible for building or distributing releases themselves."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:["Maintainers are ",(0,r.jsx)(i.strong,{children:"only required to maintain and push buildable, bootable source code"})," (device tree, vendor tree, kernel, etc.) to the official Halcyon Git repositories."]}),"\n",(0,r.jsxs)(i.li,{children:["Keeping sources fully up to date is ",(0,r.jsx)(i.strong,{children:"not mandatory"}),", but they ",(0,r.jsx)(i.strong,{children:"must remain functional"})," for building and booting."]}),"\n",(0,r.jsxs)(i.li,{children:["If any issue arises, such as ",(0,r.jsx)(i.strong,{children:"build failure, boot issues, or problems reported by users"}),", the maintainer is ",(0,r.jsx)(i.strong,{children:"REQUIRED"})," to resolve it as soon as possible."]}),"\n",(0,r.jsxs)(i.li,{children:["This process ensures a ",(0,r.jsx)(i.strong,{children:"unified and consistent release flow"})," for all official Halcyon builds."]}),"\n"]})]})}function h(e={}){let{wrapper:i}={...(0,t.a)(),...e.components};return i?(0,r.jsx)(i,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},65:function(e,i,n){n.d(i,{Z:function(){return l},a:function(){return o}});var s=n(7294);let r={},t=s.createContext(r);function o(e){let i=s.useContext(t);return s.useMemo(function(){return"function"==typeof e?e(i):{...i,...e}},[i,e])}function l(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),s.createElement(t.Provider,{value:i},e.children)}}}]);